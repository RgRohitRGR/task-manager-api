# .github/workflows/main.yml

# 1. Workflow Name (Line 2 is now valid)
name: Java Task Manager API CI/CD 

# 2. Event Triggers (Zero indentation)
on:
  push:
    branches: [ "main" ] # Trigger on pushes to the main branch
  pull_request:
    branches: [ "main" ]

# 3. Jobs Definition (Required top-level property)
jobs:
  # Define a single job named build_and_publish
  build_and_publish:
    runs-on: ubuntu-latest

    env:
      # Environment variables for Docker build/push
      DOCKER_IMAGE_NAME: task-manager-api 
      DOCKER_REGISTRY: docker.io
      REGISTRY_USERNAME: ${{ secrets.DOCKER_USERNAME }} 
      
    steps:
      # Step 1: Checkout the code
      - name: ‚öôÔ∏è Checkout Code
        uses: actions/checkout@v4
        
      # Step 2: Docker Login to Registry (Authentication)
      - name: üê≥ Docker Login to Registry
        uses: docker/login-action@v3
        with:
          username: ${{ env.REGISTRY_USERNAME }}
          # Uses the GitHub secret for the password
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Docker Build and Push
      # This single step executes the multi-stage Dockerfile:
      #   1. Code Build (mvn package) is run by the Dockerfile's Stage 1
      #   2. Docker Build (Final JRE image) is run by the Dockerfile's Stage 2
      #   3. Docker Push is done via 'push: true'
      - name: üèóÔ∏è Docker Build and Push
        uses: docker/build-push-action@v5
        with:
          context: . 
          push: true
          # Tags the image with 'latest' and the specific commit SHA
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.REGISTRY_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
            ${{ env.DOCKER_REGISTRY }}/${{ env.REGISTRY_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}